name: Deploy Swagger Docs to S3

on:
  pull_request:
    types: [closed]
    branches:
      - master
    paths:
      - "docs/**"

env:
  SWAGGER_FILE: docs/swagger.yaml
  S3_BUCKET: rise-apidocs
  CURRENT_VERSION: v1.1 # Default version

jobs:
  deploy-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Calculate new version
        id: version
        run: |
          # Extract major and minor version numbers
          CURRENT_VERSION=$(cat docs/version.txt 2>/dev/null || echo "1.1")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)

          # Increment minor version
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEW_MINOR}"

          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

          # Update version file for next run
          echo "${NEW_VERSION}" > docs/version.txt

      - name: Generate simple changelog
        run: |
          # Create a simple changelog based on git commits
          echo "# API Documentation Update - ${{ steps.version.outputs.new_version }}" > changelog.txt
          echo "Generated on $(date)" >> changelog.txt
          echo "" >> changelog.txt

          # Get commit messages related to the Swagger file
          echo "## Recent Changes" >> changelog.txt
          git log -n 10 --pretty=format:"- %s" --grep="swagger\|api\|docs\|documentation" >> changelog.txt || echo "- Initial documentation version" >> changelog.txt

          echo "" >> changelog.txt
          echo "## How to Use" >> changelog.txt
          echo "This API documentation is available in OpenAPI (Swagger) format." >> changelog.txt
          echo "You can view it with any OpenAPI/Swagger compatible viewer." >> changelog.txt

      - name: Deploy to S3 with public read access
        run: |
          # Copy new version with public-read ACL
          aws s3 cp ${{ env.SWAGGER_FILE }} "s3://${S3_BUCKET}/${{ steps.version.outputs.new_version }}/swagger.yaml" --acl public-read
          aws s3 cp changelog.txt "s3://${S3_BUCKET}/${{ steps.version.outputs.new_version }}/changelog.txt" --acl public-read

          # Update latest version with public-read ACL
          aws s3 cp ${{ env.SWAGGER_FILE }} "s3://${S3_BUCKET}/latest/swagger.yaml" --acl public-read
          aws s3 cp changelog.txt "s3://${S3_BUCKET}/latest/changelog.txt" --acl public-read

      - name: Update version tracking
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/version.txt
          git commit -m "Bump API version to ${{ steps.version.outputs.new_version }}"
          git push
