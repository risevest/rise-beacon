name: Deploy Swagger Docs to S3

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - master
#     paths:
#       - "docs/**"
on:
  push:
    branches:
      - master
      - feat/ci-automation

env:
  SWAGGER_FILE: docs/swagger.yaml
  S3_BUCKET: rise-apidocs
  CURRENT_VERSION: v1.1 # Default version

jobs:
  deploy-docs:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Redocly CLI and other dependencies
        run: |
          npm install -g swagger-changelog
          npm install -g @redocly/cli

      - name: Calculate new version
        id: version
        run: |
          # Extract major and minor version numbers
          CURRENT_VERSION=$(cat docs/version.txt || echo "1.1")
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)

          # Increment minor version
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEW_MINOR}"

          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT

          # Update version file for next run
          echo "${NEW_VERSION}" > docs/version.txt

      - name: Download previous version for comparison
        run: |
          # Download previous version if it exists
          aws s3 cp "s3://${S3_BUCKET}/${{ steps.version.outputs.current_version }}/swagger.yaml" previous-swagger.yaml || echo "No previous version found, this must be the first deployment."

      - name: Generate changelog using openapi-diff
        run: |
          # Install openapi-diff for changelog generation
          npm install -g openapi-diff

          # If previous version exists, generate changelog
          if [ -f "previous-swagger.yaml" ]; then
            echo "Generating changelog between versions..."
            openapi-diff previous-swagger.yaml ${{ env.SWAGGER_FILE }} > changelog_raw.json
            
            # Format the JSON output to a more readable text format
            echo "# API Changes from ${{ steps.version.outputs.current_version }} to ${{ steps.version.outputs.new_version }}" > changelog.txt
            echo "Generated on $(date)" >> changelog.txt
            echo "" >> changelog.txt
            
            # Extract breaking changes
            echo "## Breaking Changes" >> changelog.txt
            jq -r '.breakingChanges[] | "- " + .location + ": " + .action' changelog_raw.json 2>/dev/null | grep -v "null" >> changelog.txt || echo "No breaking changes" >> changelog.txt
            
            # Extract non-breaking changes
            echo "" >> changelog.txt
            echo "## Non-Breaking Changes" >> changelog.txt
            jq -r '.nonBreakingChanges[] | "- " + .location + ": " + .action' changelog_raw.json 2>/dev/null | grep -v "null" >> changelog.txt || echo "No non-breaking changes" >> changelog.txt
            
            echo "" >> changelog.txt
            echo "## Details" >> changelog.txt
            jq -r '.unmatchDiffs[] | "- " + .location + ": " + .type' changelog_raw.json 2>/dev/null | grep -v "null" >> changelog.txt || echo "No detailed differences" >> changelog.txt
          else
            # Create initial changelog for first deployment
            echo "# Initial API Documentation - ${{ steps.version.outputs.new_version }}" > changelog.txt
            echo "Generated on $(date)" >> changelog.txt
            echo "" >> changelog.txt
            echo "This is the first version of the API documentation." >> changelog.txt
          fi

      - name: Deploy to S3
        run: |
          # Copy new version with public-read ACL
          aws s3 cp ${{ env.SWAGGER_FILE }} "s3://${S3_BUCKET}/${{ steps.version.outputs.new_version }}/swagger.yaml" --acl public-read
          aws s3 cp changelog.txt "s3://${S3_BUCKET}/${{ steps.version.outputs.new_version }}/changelog.txt" --acl public-read

          # Update latest version with public-read ACL
          aws s3 cp ${{ env.SWAGGER_FILE }} "s3://${S3_BUCKET}/latest/swagger.yaml" --acl public-read

      - name: Update version tracking
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/version.txt
          git commit -m "Bump API version to ${{ steps.version.outputs.new_version }}"
          git push
